<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter>
	    <filter-name>httpMethodFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	
	<filter-mapping>
	    <filter-name>httpMethodFilter</filter-name>
	    <servlet-name>action</servlet-name>
	</filter-mapping>
	<!-- 
	ContextLoaderListener 에 해당하는 부분이 root context 가 되고
	DispatcherServlet 에 해당하는 부분이 child context 가 된다
	객체지향 프로그래밍의 매커니즘에 따라서 root Context 에 있는 bean 을 child 에서 사용할수 있지만
	반대로 root 에서 child 에 설정되어있는 bean 을 사용하지 못한다.]
	
	
	현재 프로젝트의 resource만 선택 한다는 것과 ( classpath )
	현재 프로젝트에 관련(참조)된 모든 jar를 다 검색하여 리소스를 선택 한다는 차이 ( classpath*) 입니다.
	 -->
  

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:web/spring/context/context-*.xml</param-value>
    </context-param>

  <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/servlet/springmvc/*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
</web-app>
